// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alpacalabs/password/v1/api_check_password.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckPasswordRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckPasswordRequest) Reset()         { *m = CheckPasswordRequest{} }
func (m *CheckPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*CheckPasswordRequest) ProtoMessage()    {}
func (*CheckPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e338ed85ee92dcb4, []int{0}
}

func (m *CheckPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckPasswordRequest.Unmarshal(m, b)
}
func (m *CheckPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckPasswordRequest.Marshal(b, m, deterministic)
}
func (m *CheckPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckPasswordRequest.Merge(m, src)
}
func (m *CheckPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_CheckPasswordRequest.Size(m)
}
func (m *CheckPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckPasswordRequest proto.InternalMessageInfo

func (m *CheckPasswordRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *CheckPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CheckPasswordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckPasswordResponse) Reset()         { *m = CheckPasswordResponse{} }
func (m *CheckPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*CheckPasswordResponse) ProtoMessage()    {}
func (*CheckPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e338ed85ee92dcb4, []int{1}
}

func (m *CheckPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckPasswordResponse.Unmarshal(m, b)
}
func (m *CheckPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckPasswordResponse.Marshal(b, m, deterministic)
}
func (m *CheckPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckPasswordResponse.Merge(m, src)
}
func (m *CheckPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_CheckPasswordResponse.Size(m)
}
func (m *CheckPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckPasswordResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CheckPasswordRequest)(nil), "alpacalabs.password.v1.CheckPasswordRequest")
	proto.RegisterType((*CheckPasswordResponse)(nil), "alpacalabs.password.v1.CheckPasswordResponse")
}

func init() {
	proto.RegisterFile("alpacalabs/password/v1/api_check_password.proto", fileDescriptor_e338ed85ee92dcb4)
}

var fileDescriptor_e338ed85ee92dcb4 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4f, 0xcc, 0x29, 0x48,
	0x4c, 0x4e, 0xcc, 0x49, 0x4c, 0x2a, 0xd6, 0x2f, 0x48, 0x2c, 0x2e, 0x2e, 0xcf, 0x2f, 0x4a, 0xd1,
	0x2f, 0x33, 0xd4, 0x4f, 0x2c, 0xc8, 0x8c, 0x4f, 0xce, 0x48, 0x4d, 0xce, 0x8e, 0x87, 0x89, 0xea,
	0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x89, 0x21, 0x34, 0xe8, 0xc1, 0xa5, 0xca, 0x0c, 0x95, 0x02,
	0xb9, 0x44, 0x9c, 0x41, 0xea, 0x03, 0xa0, 0x62, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42,
	0xb2, 0x5c, 0x5c, 0x89, 0xc9, 0xc9, 0xf9, 0xa5, 0x79, 0x25, 0xf1, 0x99, 0x29, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x9c, 0x41, 0x9c, 0x50, 0x11, 0xcf, 0x14, 0x21, 0x29, 0x2e, 0x0e, 0x98, 0x29, 0x12,
	0x4c, 0x60, 0x49, 0x38, 0x5f, 0x49, 0x9c, 0x4b, 0x14, 0xcd, 0xc8, 0xe2, 0x82, 0xfc, 0xbc, 0xe2,
	0x54, 0xa7, 0x95, 0x8c, 0x5c, 0x52, 0xc9, 0xf9, 0xb9, 0x7a, 0xd8, 0x9d, 0xe2, 0xc4, 0x0b, 0xd3,
	0x10, 0x00, 0x72, 0x71, 0x00, 0x63, 0x94, 0x53, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72,
	0x7e, 0xae, 0xbe, 0x23, 0x58, 0x8f, 0x0f, 0xd8, 0xbf, 0x20, 0xe9, 0xa2, 0xd4, 0x82, 0x7c, 0x5d,
	0x98, 0x6e, 0xdd, 0xf4, 0x7c, 0x1c, 0x01, 0xb2, 0x88, 0x89, 0xd9, 0xd1, 0x27, 0x60, 0x15, 0x93,
	0x18, 0x42, 0xbf, 0x1e, 0xcc, 0x1a, 0xbd, 0x30, 0xc3, 0x53, 0xc8, 0x12, 0x31, 0x30, 0x89, 0x98,
	0x30, 0xc3, 0x24, 0x36, 0xb0, 0x2d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x34, 0xf4, 0xc4,
	0x56, 0x69, 0x01, 0x00, 0x00,
}
